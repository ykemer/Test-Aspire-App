@using Microsoft.AspNetCore.Components.Authorization
@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="page">
  <div class="sidebar">
    <NavMenu/>
  </div>

  <main>
    <div class="top-row px-4">
      <CascadingAuthenticationState>

        <AuthorizeView>
          <Authorized>
            <div class="nav-item px-3">Hello, @userName</div>
            <div class="nav-item px-3">
              <NavLink class="nav-link" href="logout">
                <span class="bi bi-list-nested" aria-hidden="true"></span> Logout
              </NavLink>
            </div>
          </Authorized>
          <NotAuthorized>
            <div class="nav-item px-3">
              <NavLink class="nav-link" href="register">
                <span class="bi bi-box-arrow-in-right" aria-hidden="true"></span> Registration
              </NavLink>
            </div>
            <div class="nav-item px-3">
              <NavLink class="nav-link" href="login">
                <span class="bi bi-box-arrow-in-right" aria-hidden="true"></span> Login
              </NavLink>
            </div>
          </NotAuthorized>
        </AuthorizeView>
      </CascadingAuthenticationState>

    </div>

    <article class="content px-4">
      @Body
    </article>
  </main>
</div>

<div id="blazor-error-ui">
  An unhandled error has occurred.
  <a href="" class="reload">Reload</a>
  <a class="dismiss">🗙</a>
</div>


@code{

  [CascadingParameter] protected Task<AuthenticationState> AuthStat { get; set; }
  private string? userName { get; set; }

  protected override async Task OnInitializedAsync()
  {
    base.OnInitialized();

    var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
    var user = authState.User;
    userName = user?.Identity?.Name;
  }

}