@page "/courses"
@using Aspire_App.Web.Components.Shared
@using Aspire_App.Web.Services.Courses
@using Contracts.Common
@using Contracts.Courses.Responses
@attribute [Authorize]

@rendermode InteractiveServer

@attribute [StreamRendering]
@attribute [OutputCache(Duration = 5)]

@inject ICoursesApiService CoursesApiService
<PageTitle>Courses</PageTitle>

<div class="container my-4">
  <div class="d-flex justify-content-between align-items-center mb-3">
    <h1 class="h3 mb-0">Courses</h1>
  </div>

  @if (_courses == null)
  {
    <div class="d-flex justify-content-center align-items-center py-5">
      <div class="spinner-border text-primary" role="status" aria-label="Loading courses"></div>
      <span class="ms-2 text-muted">Loading courses...</span>
    </div>
  }
  else if (_courses.Items.Count == 0)
  {
    <div class="card shadow-sm">
      <div class="card-body text-center py-5">
        <p class="text-muted mb-0">No courses found.</p>
      </div>
    </div>
  }
  else
  {
    <div class="card shadow-sm">
      <div class="card-body p-0">
        <div class="table-responsive">
          <table class="table table-striped table-hover align-middle mb-0">
            <thead class="table-light">
            <tr>
              <th style="width:35%">Name</th>
              <th style="width:50%">Description</th>
              <th class="text-end" style="width:15%">Actions</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var course in _courses.Items)
            {
              <tr>
                <td class="fw-semibold">@course.Name</td>
                <td class="text-muted">@course.Description</td>
                <td class="text-end">
                  <NavLink href="@($"/courses/{course.Id}/classes")" class="btn btn-outline-primary btn-sm">Classes</NavLink>
                </td>
              </tr>
            }
            </tbody>
          </table>
        </div>
      </div>
      @if (_courses.TotalPages > 1)
      {
        <div class="card-footer bg-white">
          <div class="d-flex justify-content-center">
            <Pager records="_courses" ChangePage="GetCourses"/>
          </div>
        </div>
      }
    </div>
  }
</div>


@code {
  private PagedList<CourseListItemResponse>? _courses;
  private int Page { get; set; }
  private Guid? _loadingCourseId = null;

  protected override async Task OnInitializedAsync()
  {
    await GetCourses();
  }

  protected async Task GetCourses(int page = 1)
  {
    Page = page;
    _courses = null;
    _courses = await CoursesApiService.GetCoursesListAsync(page);
  }

}
