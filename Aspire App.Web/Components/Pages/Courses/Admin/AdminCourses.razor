@page "/admin/courses"
@using Aspire_App.Web.Components.Shared

@using Aspire_App.Web.Services.Courses
@using global::Contracts.Courses.Responses
@using Library.Pagination
@attribute [Authorize]

@rendermode InteractiveServer

@attribute [StreamRendering()]
@attribute [OutputCache(Duration = 5)]

@inject ICoursesApiService CoursesApiService
<PageTitle>Courses</PageTitle>

<h1>Courses</h1>


@if (_courses == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else if (_courses.Items.Count == 0)
{
    <p>
        <em>No courses found.</em>
    </p>
}
else
{
    <div>
        <NavLink href="/admin/courses/create" class="btn btn-primary ml-auto">Create Course</NavLink>
        <table class="table">
            <thead>
            <tr>
                <th>Name</th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var course in _courses.Items)
            {
            <tr>
                <td>@course.Name</td>
                <td>
                    <NavLink href="@($"/admin/course/{course.Id}")" class="btn btn-primary">Enrolled Students</NavLink >
                </td>
            </tr>
            }
            </tbody>
        </table>

        @if (_courses.TotalPages > 1)
        {
        <Pager records="_courses" ChangePage="GetStudents"/>
        }
    </div>
    
    
}


@code {
    private PagedList<CourseResponse>? _courses;

    protected override async Task OnInitializedAsync()
    {
        await GetStudents();
    }

    protected async Task GetStudents(int page = 1)
    {
        _courses = null;
        _courses = await CoursesApiService.GetCoursesListForAdminAsync(page);
    }
}